import os
from dotenv import load_dotenv
from telegram import Update, InlineQueryResultGame
from telegram.ext import (
    Application,
    CommandHandler,
    CallbackContext,
    CallbackQueryHandler,
    InlineQueryHandler
)

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞
load_dotenv()
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

if not TOKEN:
    raise ValueError("–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env")


async def start(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await update.message.reply_text(
        "üêç –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ó–º–µ–π–∫—É!\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/play - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É\n"
        "/help - –ü–æ–º–æ—â—å"
    )


async def play(update: Update, context: CallbackContext) -> None:
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –∏–≥—Ä—ã"""
    try:
        await update.message.reply_game(game_short_name="snake_game")
    except Exception as e:
        await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")


async def handle_game(update: Update, context: CallbackContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∏–≥—Ä—É"""
    query = update.callback_query
    await query.answer()
    await query.edit_message_text("üéÆ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–≥—Ä—É...")


async def inline_query(update: Update, context: CallbackContext) -> None:
    """Inline-—Ä–µ–∂–∏–º"""
    await update.inline_query.answer([
        InlineQueryResultGame(
            id="1",
            game_short_name="snake_game"
        )
    ])


def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
    if not TOKEN or len(TOKEN) < 30:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª")
        return

    try:
        application = Application.builder().token(TOKEN).build()

        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        handlers = [
            CommandHandler("start", start),
            CommandHandler("play", play),
            CommandHandler("help", start),
            CallbackQueryHandler(handle_game, pattern="^snake_game$"),
            InlineQueryHandler(inline_query)
        ]

        for handler in handlers:
            application.add_handler(handler)

        print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
        application.run_polling()

    except Exception as e:
        print(f"üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {str(e)}")


if __name__ == "__main__":
    print("üîÑ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    main()